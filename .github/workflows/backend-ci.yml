name: Backend CI/CD

on:
  pull_request_target:
    branches: [ main ]
    paths:
      - 'se2025BackEnd/**'
    

jobs:
  backend-build-test:
    runs-on: ubuntu-latest
    steps:  
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # 明确指定PR源分支
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          
      - name: Build backend
        working-directory: se2025BackEnd
        run: mvn package -DskipTests

  backend-deploy:
    needs: backend-build-test
    if: github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # 明确指定PR源分支
          fetch-depth: 0
      
      - name: Set up JDK for deploy
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          
      - name: Build backend JAR
        working-directory: se2025BackEnd
        run: mvn package -DskipTests
          
      - name: Transfer backend files to Huawei Cloud
        run: |
          sudo apt-get install -y sshpass
          sshpass -p "${{ secrets.SSH_PASSWORD }}" scp -o StrictHostKeyChecking=no -r se2025BackEnd/target/*.jar Administrator@${{ secrets.HUAWEI_SERVER_IP }}:"C:/Users/Administrator/project/temp/deploy/target/"

      - name: Simple Backend Test
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HUAWEI_SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            powershell.exe -ExecutionPolicy Bypass -Command "
            '=== 开始后端部署 ==='

            '步骤1: 获取8080端口进程ID并停止'
            `$processId = (netstat -ano | findstr :8080 | findstr LISTENING | Select-Object -First 1) -split '\\s+' | Select-Object -Last 1
            '找到进程ID: ' + `$processId
            if (`$processId) {
                '停止进程 (PID: ' + `$processId + ')'
                Stop-Process -Id `$processId -Force
                Start-Sleep -Seconds 3
                '进程已停止'
            } else {
                '没有找到占用8080端口的进程'
            }

            '步骤2: 部署新版本'
            '创建目录...'
            mkdir 'C:\Users\Administrator\project\backend' -Force

            '复制JAR文件...'
            Copy-Item 'C:\Users\Administrator\project\temp\deploy\target\*.jar' 'C:\Users\Administrator\project\backend\' -Force

            '步骤3: 检查复制结果'
            `$jarPath = 'C:\Users\Administrator\project\backend\project-0.0.1-SNAPSHOT.jar'
            if (Test-Path `$jarPath) {
                'JAR文件存在: ' + `$jarPath
                '文件大小: ' + (Get-Item `$jarPath).Length + ' bytes'
            } else {
                '错误: JAR文件不存在'
                exit 1
            }

            '步骤4: 启动服务'
            '启动后端服务...'
            Start-Process -FilePath 'java' -ArgumentList '-jar', `$jarPath -NoNewWindow -WorkingDirectory 'C:\Users\Administrator\project\backend'
            '服务启动命令已执行'

            '步骤5: 验证启动'
            '等待服务启动...'
            Start-Sleep -Seconds 10

            `$isRunning = netstat -ano | findstr :8080
            if (`$isRunning) {
                '✅ 后端服务启动成功'
                '当前8080端口状态:'
                netstat -ano | findstr :8080
            } else {
                '❌ 后端服务启动失败'
                '检查Java进程:'
                Get-Process -Name java -ErrorAction SilentlyContinue
                exit 1
            }

            '=== 后端部署完成 ==='
            "