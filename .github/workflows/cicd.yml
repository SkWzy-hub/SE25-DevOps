name: CI/CD Pipeline

on:
  pull_request_target:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:  
    - name: Checkout code
      uses: actions/checkout@v3

    # 前端构建测试
    - name: Set up image.pngNode.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install frontend dependencies
      working-directory: se2025FrontEnd
      run: npm install
    - name: Build frontend
      working-directory: se2025FrontEnd
      run: npm run build

    # 后端构建测试
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
    - name: Build backend
      working-directory: se2025BackEnd
      run: mvn package -DskipTests  # 跳过测试（如果测试需要数据库等环境）

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK for deploy
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
      
    # 准备前端文件
    - name: Build frontend for deploy
      working-directory: se2025FrontEnd
      run: |
        npm install
        npm run build
        
    # 准备后端JAR
    - name: Build backend JAR
      working-directory: se2025BackEnd
      run: mvn package -DskipTests
      
    # SCP到华为云
    - name: Transfer files to Huawei Cloud
      run: |
        sudo apt-get install -y sshpass

        sshpass -p "${{ secrets.SSH_PASSWORD }}" scp -o StrictHostKeyChecking=no -r se2025FrontEnd/dist/* Administrator@${{ secrets.HUAWEI_SERVER_IP }}:"C:/Users/Administrator/project/temp/deploy/dist/"
    
        sshpass -p "${{ secrets.SSH_PASSWORD }}" scp -o StrictHostKeyChecking=no -r se2025BackEnd/target/* Administrator@${{ secrets.HUAWEI_SERVER_IP }}:"C:/Users/Administrator/project/temp/deploy/target/"

        
    - name: Deploy and Start Application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HUAWEI_SERVER_IP }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        command_timeout: 30m
        script: |
          powershell.exe -Command "
          Get-Process -Name java -ErrorAction SilentlyContinue | Where-Object { `$_.CommandLine -like '*.jar*' } | Stop-Process -Force"
          powershell.exe -Command "mkdir  'C:\Users\Administrator\project\backend' -Force"
          powershell.exe -Command "mkdir  'C:\Users\Administrator\project\frontend' -Force"
          powershell.exe -Command "if (Test-Path 'C:\Users\Administrator\project\frontend\*') { Remove-Item 'C:\Users\Administrator\project\frontend\*' -Recurse -Force }"
          powershell.exe -Command "xcopy 'C:\Users\Administrator\project\temp\deploy\dist\*' 'C:\Users\Administrator\project\frontend\' /E /Y"
          powershell.exe -Command "dir 'C:\Users\Administrator\project\frontend'"
          powershell.exe -Command "copy 'C:\Users\Administrator\project\temp\deploy\target\*.jar' 'C:\Users\Administrator\project\backend\'"
          powershell.exe -Command "dir 'C:\Users\Administrator\project\backend'"
          
          powershell.exe -Command "node -v"
          powershell.exe -Command "npm -v"
          powershell.exe -Command "java -version"
          powershell.exe -Command "npm install -g serve"

          powershell.exe -Command "cd 'C:\Users\Administrator\project\frontend'; start /b serve -s -l 5173"

          powershell.exe -Command "cd 'C:\Users\Administrator\project\backend'; \$jarFile = Get-ChildItem '*.jar' | Select-Object -First 1; java -jar \$jarFile > app.log 2> app-error.log"
          powershell.exe -Command "Start-Sleep -Seconds 10"

          powershell.exe -Command "\$process = Get-Process -Name java -ErrorAction SilentlyContinue; if (\$process) { Write-Host \"Java进程运行中：\$(\$process.Id)\" } else { Write-Host \"Java进程未找到\"; exit 1 }"